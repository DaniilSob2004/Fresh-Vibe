<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Базовые цвета приложения -->
    <SolidColorBrush x:Key="BGWindow" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="MainColor" Color="Green"/>
    <SolidColorBrush x:Key="TextColorBlack" Color="Black"/>
    <SolidColorBrush x:Key="TextColorWhite" Color="White"/>
    <SolidColorBrush x:Key="TextColorGray" Color="Gray"/>
    <SolidColorBrush x:Key="IsMouseOverColor" Color="LightGreen"/>

    <!-- Базовый шрифт -->
    <FontFamily x:Key="MainFont">Calibri</FontFamily>

    <!-- Базовое значение для закгругления элементов -->
    <CornerRadius x:Key="baseCornerRadius" TopLeft="5" TopRight="5" BottomRight="5" BottomLeft="5"/>
    <CornerRadius x:Key="baseCornerRadiusButton" TopLeft="12" TopRight="12" BottomRight="12" BottomLeft="12"/>

    <!-- Базовый стиль для заголовков(текста который нужно выделить) TextBlock -->
    <Style x:Key="baseHeaderTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource MainColor}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
    </Style>

    <Style x:Key="blackTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource baseHeaderTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource TextColorBlack}"/>
    </Style>

    <Style x:Key="whiteTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource baseHeaderTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource TextColorWhite}"/>
    </Style>

    <!-- Базовый стиль для TextBox -->
    <Style x:Key="baseTextBoxStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource TextColorBlack}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextColorGray}"/>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{StaticResource baseCornerRadius}"/>
            </Style>
        </Style.Resources>
    </Style>

    <!-- Базовый стиль для PasswordBox -->
    <Style x:Key="basePasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Foreground" Value="{StaticResource TextColorBlack}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{StaticResource baseCornerRadius}"/>
            </Style>
        </Style.Resources>
    </Style>

    <!-- Базовый стиль для Button -->
    <Style x:Key="baseButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource TextColorWhite}"/>
        <Setter Property="Background" Value="{StaticResource MainColor}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource baseCornerRadiusButton}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource IsMouseOverColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="baseButtonImageStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource IsMouseOverColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Базовый стиль для обычного Border -->
    <Style x:Key="baseBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource TextColorWhite}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MainColor}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="CornerRadius" Value="{StaticResource baseCornerRadius}"/>
    </Style>
    
    <!-- Базовый стиль для Border заголока -->
    <Style x:Key="baseBorderHeaderStyle" TargetType="Border" BasedOn="{StaticResource baseBorderStyle}">
        <Setter Property="CornerRadius" Value="0 0 15 15"/>
    </Style>

</ResourceDictionary>